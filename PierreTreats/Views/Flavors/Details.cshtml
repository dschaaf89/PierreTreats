@{
  Layout = "_Layout";
}

@model PierreTreats.Models.Flavor
<h2>Flavor Details</h2>
<hr />
<p>@Html.DisplayFor(model => model.FlavorType) | Flavor Details</p>
<hr />
<p>Flavor Name: @Html.DisplayFor(model => model.FlavorType)</p>

        @if(Model.TreatFlavor.Count == 0)
          {
            <p>@Model.FlavorType has no Treats .</p>
          }
          <ul>
            @foreach (TreatFlavor treatFlavor in @Model.TreatFlavor)
            {
              @if(@User.Identity.IsAuthenticated)
              {
                <li>@Html.ActionLink(treatFlavor.Treat.Name,"details","treats", new {id = treatFlavor.TreatId}) </li>
              }
              else
              {
                <li>@Html.ActionLink(treatFlavor.Treat.Name,"details","treats", new {id = treatFlavor.TreatId}) </li>
              }
                
            }
          </ul>
          <div>
            @if(@User.Identity.IsAuthenticated)
            {
              if(User.IsInRole("Administrator"))
              {
              <button class="btn btn-info" onclick="window.location.href='/flavors/addTreat/@Model.FlavorId';">Add a Treat</button>
              }
            }

           @if(@User.Identity.IsAuthenticated)
            {
              if(User.IsInRole("Administrator"))
              {
              @Html.ActionLink("AddTreat", "AddTreat", new { id = Model.FlavorId }, new { @class="btn btn-info fa fa-edit" })
              @Html.ActionLink("Delete", "Delete", new { id = Model.FlavorId }, new { @class="btn btn-info fa fa-edit" })
              }
            }
